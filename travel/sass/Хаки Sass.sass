//Создание переменных

$name:Proxima;
$background:red;

//Примесь для шрифтов

@mixin Font($name, $fw){
  font-family: 'Proxima Nova';
  src: url('../fonts/#{$name}.eot'); //#{$name} - экранирование переменной
  src: url('../fonts/#{$name}.eot?#iefix') format('embedded-opentype'), 
       url('../fonts/#{$name}.woff2') format('woff2'),
       url('../fonts/#{$name}.woff') format('woff'), 
       url('../fonts/#{$name}.ttf')  format('truetype'), 
       url('../fonts/#{$name}.svg#svgFontName') format('svg');
  font-weight: $fw;
  font-style: normal; 
}



//Примесь для ссылок

@mixin links($link, $visited, $hover, $active){
	a{
		color: $link;
		&:visited{
			color: $visited;
		}
		&:hover{
			color: $hover;
		}
		&:active{
			color:$active;
		}
	}
}



//примесь для фонов

@mixin backGround($color, $img, $repeat, $x, $y, $size){
background:$color url(../img/#{$img}.png) $repeat $x $y $size;
}




//примесь для текстов

@mixin text($size, $line-height, $weight, $color) {
  font-size: $size;
  line-height: $line-height;
  font-weight: $weight;
  color: $color;
}


@mixin text($size, $line-height: null, $weight: null, $color: null) {
  font-size: $size;
  line-height: $line-height;
  font-weight: $weight;
  color: $color;
}
//пример подключения(можно указывать только нужные свойства)
h1 {
  @include text(2em);
}
h2 {
  @include text(1.25em, 1.2);
}
p {
  @include text(1em, 1,2, normal);
}




//примеси медиазапросов
//создание точек перехода
$screen-small : 400px;
$screen-medium : 760px;
$screen-larger: 1000px;

@mixin mq-small-up {
  @media (min-width: $screen-small) {
    @content;//код, который помещается внутри фигурных скобок после директивы  @include
  }
}

@mixin mq-medium-up {
  @media (min-width: $screen-medium) {
    @content;
  }
}

@mixin mq-larger-up {
  @media (min-width: $screen-larger) {
    @content;
  }
}

p {
  font-size: 1.5em;
  @include mq-small-up {
    font-size: 1.75em;
    margin-top: 10px;
  }
}





//extend

h1 {
  font-family: "Raleway", Helvetica, Arial, sans-serif;
  color: #222;
}
h2 {
  @extend h1
}
h3 {
  @extend h1
}


//создание псевдоселектора

#main h1 {
  background-color: blue;
}
%headline {
  font-family: "Raleway", Helvetica, Arial, sans-serif;
  color: #222;
}
h1 {
  @extend %headline;
}
h2 {
  @extend %headline;
  border-top: 1px solid #444;
}
h3 {
  @extend %headline;
 margin-left: 20px;
}

//математич операции
$height:120px;
.math{
	font-size: 14px * 2;
	width:100% / 12 * 4;
	height:$height - 40px + 20px;
}

//if()

$var: true;

.block{
	background: if($var, orange, red);//eсли первое выражение true - вовзращается первое значение, false - второе
}

$width:480px;

.block{
	background: if($width>500px, orange, red);
}

//директива @if()

@if $width >= 480px and $width < 768px {
	@media (min-width: 480px){
		width:50%;
	}@else if $width >= 768px{
		@media (main-width: 768px){
			width: 33%;
		}
		}@else {
		width:100%;
	}	
}

//@each цикл

$colors: red, grey, blue;

.btn{
	min-width:120px;
	@each $color in $colors{
		&-#{$color}{
			backGround:$color;
		}
	}
}

//for
//создание модульной сетки
@for $i from 1 to 12{//$i - счетчик цикла
	.col-#{$i}{
		width: 100% / 12 * $i;
	}
}

//@function функции

$grid-width:10%;//ширина колонки
$gutter-width:$grid-width/4;//ширина промежутка между колонками

@function grid-width($n){//$n количество колонок, аргумент функции
@return $n * $grid-width + ($n - 1) * $ gutter-width;//вовзращается ширина блока
}

.sidebar{
	width:grid-width(4);
}
.footer{
	width:grid-width(12);
}